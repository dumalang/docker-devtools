version: '3.8'

networks:
  kong-net:
    driver: bridge

services:
  # PostgreSQL database for Kong
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    networks:
      - kong-net
    ports:
      - "5432:5432"
    volumes:
      - kong_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kong database migration
  kong-migration:
    image: kong:3.4.0
    container_name: kong-migration
    command: "kong migrations bootstrap"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PG_DATABASE: kong
    networks:
      - kong-net
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

  # Kong Gateway
  kong:
    image: kong:3.4.0
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    networks:
      - kong-net
    ports:
      - "8000:8000"  # Kong Proxy
      - "8001:8001"  # Kong Admin API
      - "8443:8443"  # Kong Proxy (SSL)
      - "8444:8444"  # Kong Admin API (SSL)
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Konga (Kong Admin UI)
  konga:
    image: pantsel/konga:0.14.9
    container_name: konga
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kongpass@kong-database:5432/konga
      NODE_ENV: production
      KONGA_HOOK_TIMEOUT: 120000
    networks:
      - kong-net
    ports:
      - "1337:1337"
    depends_on:
      kong-database:
        condition: service_healthy
      kong:
        condition: service_healthy
    restart: unless-stopped

  # Konga database preparation
  konga-prepare:
    image: pantsel/konga:0.14.9
    container_name: konga-prepare
    command: "-c prepare -a postgres -u postgresql://kong:kongpass@kong-database:5432/konga"
    networks:
      - kong-net
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

volumes:
  kong_data:
    driver: local
